name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_DEFAULT_REGION: eu-west-2
  ECR_REPOSITORY: my-ecr-repository
  ECS_CLUSTER: my-ecs-cluster
  ECS_SERVICE: my-ecs-service

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}

    - name: Create ECR registry and repository
      run: |
        # Create ECR registry if it doesn't exist
        if ! aws ecr describe-registries --registry-names my-ecr-registry; then
          aws ecr create-registry --registry-name my-ecr-registry
        fi

        # Create ECR repository if it doesn't exist
        if ! aws ecr describe-repositories --repository-names $ECR_REPOSITORY; then
          aws ecr create-repository --repository-name $ECR_REPOSITORY
        fi

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: my-ecr-registry.dkr.ecr.eu-west-2.amazonaws.com/$ECR_REPOSITORY:${{ github.sha }}

    - name: Create ECS cluster
      run: |
        # Create ECS cluster if it doesn't exist
        if ! aws ecs describe-clusters --clusters $ECS_CLUSTER; then
          aws ecs create-cluster --cluster-name $ECS_CLUSTER
        fi

    - name: Create ECS service
      run: |
        # Create ECS service
        ecs-cli compose service create --cluster $ECS_CLUSTER --service-name $ECS_SERVICE --deployment-min-healthy-percent 100 --deployment-max-percent 200 --target-group-arn <your-target-group-arn> --launch-type FARGATE --platform-version LATEST --desired-count 2

