name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_DEFAULT_REGION: eu-west-2
  ECR_REPOSITORY: my-ecr-repository
  ECS_CLUSTER: my-ecs-cluster
  ECS_SERVICE: my-ecs-service

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}

    - name: Create ECR registry and repository
      run: |
        # Create ECR registry if it doesn't exist
        if [aws ecr describe-registries --registry-names my-ecr-registry]
        then
          aws ecr create-registry --registry-name my-ecr-registry
        else 
          echo "ECR repository $ECR_REPOSITORY already exists."
        fi
        
        # Create ECR repository if it doesn't exist
        if  [aws ecr describe-repositories --repository-names $ECR_REPOSITORY] 
        then
          aws ecr create-repository --repository-name $ECR_REPOSITORY
        else 
          echo "ECR repository $ECR_REPOSITORY already exists."
        fi
        
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1    

    - name: Login to Amazon ECR
      run: |
        # Login to Amazon ECR
        $(aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username optimaltech --password-stdin Omodesire09@ 438337256072.dkr.ecr.eu-west-2.amazonaws.com/my-ecr-repository)


    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
         context: .
         push: true
         tags: my-ecr-registry.dkr.ecr.eu-west-2.amazonaws.com/my-ecr-repository:${{ github.sha }}


    - name: Create ECS cluster
      run: |
        # Create ECS cluster if it doesn't exist
        if : aws ecs describe-clusters --clusters $ECS_CLUSTER; then
          aws ecs create-cluster --cluster-name $ECS_CLUSTER
        fi
    - name: Create ECS service
      run: |
        # Create ECS service
        aws ecs create-service \
          --cluster $ECS_CLUSTER \
          --service-name $ECS_SERVICE \
          --task-definition <your-task-definition> \
          --desired-count 2 \
          --launch-type FARGATE \
          --platform-version LATEST \
          --network-configuration "awsvpcConfiguration={subnets=<your-subnets>,securityGroups=<your-security-groups>,assignPublicIp=DISABLED}"
